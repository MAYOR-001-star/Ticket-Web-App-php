{% extends "base.twig" %}

{% block title %}Tickets - Ticket App{% endblock %}

{% block content %}

<script>
// ✅ AUTH GUARD
const sessionUser = JSON.parse(localStorage.getItem("ticketapp_session"));
if (!sessionUser) window.location.href = "/?page=login";
</script>

<div class="max-w-[1440px] mx-auto px-4 py-10">
  <div class="flex justify-between items-center mb-8">
    <h1 class="text-3xl font-bold text-gray-800">Tickets</h1>

    <a
      href="/?page=dashboard"
      class="bg-gray-700 hover:bg-gray-800 text-white px-4 py-2 rounded-md transition"
    >
      Back to Dashboard
    </a>
  </div>

  <!-- Create/Edit Form -->
  <div class="bg-white shadow-md p-6 rounded-xl mb-10">
    <h2 class="text-2xl font-semibold mb-4" id="formTitle">Create New Ticket</h2>

    <form id="ticketForm" class="space-y-5">
      <input type="hidden" id="ticketId" />

      <div>
        <label class="block mb-1 font-medium">Title</label>
        <input type="text" id="title" class="w-full border rounded-md px-3 py-2" />
        <p class="text-red-500 text-sm hidden" id="titleError"></p>
      </div>

      <div>
        <label class="block mb-1 font-medium">Description</label>
        <textarea
          id="description"
          rows="3"
          class="w-full border rounded-md px-3 py-2"
        ></textarea>
        <p class="text-red-500 text-sm hidden" id="descError"></p>
      </div>

      <div class="grid sm:grid-cols-2 gap-4">
        <div>
          <label class="block mb-1 font-medium">Priority</label>
          <select id="priority" class="w-full border rounded-md px-3 py-2">
            <option value="">Select priority</option>
            <option value="low">Low</option>
            <option value="medium">Medium</option>
            <option value="high">High</option>
          </select>
          <p class="text-red-500 text-sm hidden" id="priorityError"></p>
        </div>

        <div>
          <label class="block mb-1 font-medium">Status</label>
          <select id="status" class="w-full border rounded-md px-3 py-2">
            <option value="">Select status</option>
            <option value="open">Open</option>
            <option value="in_progress">In Progress</option>
            <option value="closed">Closed</option>
          </select>
          <p class="text-red-500 text-sm hidden" id="statusError"></p>
        </div>
      </div>

      <button
        type="submit"
        class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-md font-medium transition"
      >
        Save Ticket
      </button>
    </form>
  </div>

  <!-- Tickets List -->
  <div id="ticketsContainer" class="grid md:grid-cols-2 lg:grid-cols-3 gap-6"></div>
</div>

<!-- Confirm Modal -->
<div
  id="confirmModal"
  class="fixed inset-0 bg-black/40 backdrop-blur-sm flex items-center justify-center z-50 hidden"
>
  <div class="bg-white rounded-xl shadow-lg w-[90%] max-w-sm p-6 text-center">
    <h2 class="text-lg font-semibold mb-2">Delete Ticket</h2>
    <p class="text-gray-600 mb-6">Are you sure you want to delete this ticket?</p>

    <div class="flex justify-center gap-3">
      <button
        id="cancelDelete"
        class="px-4 py-2 rounded-md bg-gray-200 hover:bg-gray-300 transition"
      >
        Cancel
      </button>
      <button
        id="confirmDelete"
        class="px-4 py-2 rounded-md bg-red-600 text-white hover:bg-red-700 transition"
      >
        Confirm
      </button>
    </div>
  </div>
</div>

<!-- ✅ Toastify -->
<link
  rel="stylesheet"
  href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css"
/>
<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

<style>
.toastify {
  border-radius: 8px !important;
  font-weight: 500;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  padding: 14px 20px;
}
.toastify-right {
  right: 24px !important;
}
.toastify-top {
  top: 24px !important;
}
.toastify {
  opacity: 0;
  transform: translateY(-15px);
  animation: fadeInSlideDown 0.4s forwards;
}
@keyframes fadeInSlideDown {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
</style>

<script>
let tickets = JSON.parse(localStorage.getItem("tickets")) || [];
let deleteId = null;

const container = document.getElementById("ticketsContainer");
const form = document.getElementById("ticketForm");
const modal = document.getElementById("confirmModal");
const ticketId = document.getElementById("ticketId");
const formTitle = document.getElementById("formTitle");

// ✅ input + error references
const title = document.getElementById("title");
const description = document.getElementById("description");
const priority = document.getElementById("priority");
const status = document.getElementById("status");

const titleError = document.getElementById("titleError");
const descError = document.getElementById("descError");
const priorityError = document.getElementById("priorityError");
const statusError = document.getElementById("statusError");

function saveTickets() {
  localStorage.setItem("tickets", JSON.stringify(tickets));
  renderTickets();
}

function renderTickets() {
  container.innerHTML = "";
  if (tickets.length === 0) {
    container.innerHTML = '<p class="text-gray-600 text-center mt-8">No tickets found.</p>';
    return;
  }

  tickets.forEach((t) => {
    container.innerHTML += `
      <div class="bg-white shadow-md p-5 rounded-xl border-l-4 border-blue-500">
        <h3 class="text-xl font-semibold">${t.title}</h3>
        <p class="text-gray-600 mt-2">${t.description}</p>

        <div class="mt-4 text-sm text-gray-500">
          <p><strong>Priority:</strong> ${t.priority}</p>
          <p><strong>Status:</strong> ${t.status}</p>
        </div>

        <div class="flex gap-3 mt-5">
          <button onclick="editTicket(${t.id})" class="text-blue-600 hover:text-blue-800 font-medium">Edit</button>
          <button onclick="deleteTicket(${t.id})" class="text-red-600 hover:text-red-800 font-medium">Delete</button>
        </div>
      </div>
    `;
  });
}

form.addEventListener("submit", (e) => {
  e.preventDefault();

  // reset previous errors
  [titleError, descError, priorityError, statusError].forEach((el) => {
    el.classList.add("hidden");
    el.textContent = "";
  });

  const titleVal = title.value.trim();
  const descVal = description.value.trim();
  const priorityVal = priority.value.trim();
  const statusVal = status.value.trim();

  let valid = true;

  if (!titleVal) {
    titleError.textContent = "Title is required";
    titleError.classList.remove("hidden");
    valid = false;
  }

  if (!descVal) {
    descError.textContent = "Description is required";
    descError.classList.remove("hidden");
    valid = false;
  }

  if (!priorityVal) {
    priorityError.textContent = "Select a priority";
    priorityError.classList.remove("hidden");
    valid = false;
  }

  if (!statusVal) {
    statusError.textContent = "Select a status";
    statusError.classList.remove("hidden");
    valid = false;
  }

  if (!valid) {
    Toastify({
      text: "Please fill in all required fields.",
      duration: 3000,
      gravity: "top",
      position: "right",
      close: true,
      stopOnFocus: true,
      style: {
        background: "#ef4444",
        color: "#fff",
      },
    }).showToast();
    return;
  }

  const data = {
    title: titleVal,
    description: descVal,
    priority: priorityVal,
    status: statusVal,
  };

  if (ticketId.value) {
    tickets = tickets.map((t) =>
      t.id == ticketId.value ? { ...t, ...data } : t
    );
    Toastify({
      text: "Ticket updated successfully!",
      duration: 2000,
      gravity: "top",
      position: "right",
      style: { background: "#22c55e", color: "#fff" },
    }).showToast();
  } else {
    tickets.push({ id: Date.now(), ...data });
    Toastify({
      text: "Ticket created successfully!",
      duration: 2000,
      gravity: "top",
      position: "right",
      style: { background: "#22c55e", color: "#fff" },
    }).showToast();
  }

  form.reset();
  ticketId.value = "";
  formTitle.textContent = "Create New Ticket";
  saveTickets();
});

function editTicket(id) {
  const t = tickets.find((t) => t.id == id);
  ticketId.value = t.id;
  title.value = t.title;
  description.value = t.description;
  priority.value = t.priority;
  status.value = t.status;
  formTitle.textContent = "Edit Ticket";
}

function deleteTicket(id) {
  deleteId = id;
  modal.classList.remove("hidden");
}

document.getElementById("cancelDelete").onclick = () =>
  modal.classList.add("hidden");

document.getElementById("confirmDelete").onclick = () => {
  tickets = tickets.filter((t) => t.id !== deleteId);
  saveTickets();
  modal.classList.add("hidden");
  Toastify({
    text: "Ticket deleted.",
    duration: 2000,
    gravity: "top",
    position: "right",
    style: { background: "#f87171", color: "#fff" },
  }).showToast();
};

renderTickets();
</script>

{% endblock %}
